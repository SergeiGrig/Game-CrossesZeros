# FIXME: !–¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –º–æ–¥—É–ª—å!
""""""
# TODO –∏ FIXME –ø–µ—Ä–µ–≤–æ–¥—è—Ç—Å—è –∫–∞–∫ –°–î–ï–õ–ê–¢–¨ –∏ –ò–°–ü–†–ê–í–ò–¢–¨ ‚Äî –≤ —ç—Ç–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö —è –æ–ø–∏—Å—ã–≤–∞—é –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ç –≤–∞—Å –æ–∂–∏–¥–∞—é; —Ç–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –æ—Ç—Å—Ç–∞–∏–≤–∞—Ç—å —Å–≤–æ—é –≤–µ—Ä—Å–∏—é –∫–æ–¥–∞, –Ω–æ —É–∂ –Ω–∏–∫–∞–∫ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –º–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏

from configparser import ConfigParser as CP
from pprint import pprint


# FIXME: –µ—Å–ª–∏ —Ä–µ—à–∏–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ–¥–Ω–æ–º –º–æ–¥—É–ª–µ, —Ç–æ –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞
ini1 = 'saves.ini'
ini2 = 'players.ini'

config = CP()
config.read(ini1)

saves = {}
for players in config.sections():
    game = frozenset(players.split(','))
    saves[game] = dict(config[players])
# FIXME: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –ø–æ–ª–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ö–æ–¥–∞—Ö
print('–ò–∑ —Ñ–∞–π–ª–∞ saves.ini:')
pprint(saves)
print()

config.clear()
config.read(ini2)

players = {}
for player in config.sections():
    players[player] = dict(config[player])
# FIXME: –¥–≤–∞ —Ü–∏–∫–ª–∞ –∏–∑–±—ã—Ç–æ—á–Ω—ã, –º–æ–∂–Ω–æ –≤—Å—ë —Å–¥–µ–ª–∞—Ç—å –∏ –≤ –æ–¥–Ω–æ–º; –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–π—Ç–µ –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –º–æ–π –∫–æ–¥
for into in players.values():
    scores = into['stats'].split(',')
    into['stats'] = {'wins': scores[0],
                     'ties': scores[1],
                     'fails': scores[2]}
print('–ò–∑ —Ñ–∞–π–ª–∞ players.ini:')
pprint(players)
print()


def show_field(turns) -> None:
    """–í—ã–≤–æ–¥ –ø—Å–µ–≤–¥–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è —Å–æ —Å–¥–µ–ª–∞–Ω–Ω—ã–º–∏ —Ö–æ–¥–∞–º–∏"""
    # ü°π —Å—Ç—Ä–æ–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –æ—Ñ–æ—Ä–º–ª—è–µ—Ç—Å—è –Ω–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º, –∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ª–∏—Ç–µ—Ä–∞–ª–∞, –∑–∞–∫–ª—é—á—ë–Ω–Ω–æ–≥–æ –≤ —É—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏
    for key, value in turns.items():
        print(f'–ò–≥—Ä–∞: {sorted(tuple(key))}')
        d = dict((k, v) for k, v in value.items())
        dx = d['x']
        del d['x']
        print(f'–ò–≥—Ä–æ–∫ {dx} —Å—Ç–∞–≤–∏—Ç "–•" ')
        print(f'–•–æ–¥—ã: {d}')
        d_field = {1:" ", 2:" ", 3:" ", 4:" ", 5:" ", 6:" ", 7:" ", 8:" ", 9:" "}
        # –ö–∞–∂–¥–æ–º—É —Ö–æ–¥—É –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ "–•" –∏ "0"
        for k,v in d.items():
            if k == dx:
                for s in v.replace(',',''):
                    d_field[int(s)] = 'X'
            else:
                for s in v.replace(',',''):
                    d_field[int(s)] = '0'

        print(f'–°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ {d_field}')

        # FIXME: –ø–æ—á–µ–º—É –∑–¥–µ—Å—å –≤–Ω–µ–∑–∞–ø–Ω–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø–ª–æ—Å–∫–∏–π range?
        # range –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π 1-9
        board = range(1,10)
        print('-------------')
        for i in range(3):
            print('|', d_field[board[0+i*3]], '|', d_field[board[1+i*3]], '|', d_field[board[2+i*3]], '|')
            print('-------------')
        print()


show_field(saves)


def check_win(turns) -> None:
    """–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å—Ç—å –ª–∏ –Ω–∞ –ø–æ–ª–µ –ø–æ–±–µ–¥–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è"""
    for key, value in turns.items():
        print(f'–ò–≥—Ä–∞: {sorted(tuple(key))}')
        d = dict((k, frozenset(v.replace(',',''))) for k, v in value.items() if k !='x')
        print(d)
        for p,f in d.items():
            if f in ({'1','2','3'}, {'4','5','6'}, {'7','8','9'}, {'1','4','7'}, {'2','5','8'}, {'3','6','9'}, {'1','5','9'}, {'3','5','7'}, {'8','2','3'}):
                print(f'{True})) –ü–æ–±–µ–¥–∏–ª {p} !!!')
                print()
                break
        else:
            print(f'{False} –ù–µ—Ç –ø–æ–±–µ–¥–Ω–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏')


check_win(saves)

